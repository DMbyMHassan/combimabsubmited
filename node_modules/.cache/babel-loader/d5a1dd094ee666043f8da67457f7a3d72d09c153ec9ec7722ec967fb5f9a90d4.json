{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alawa\\\\OneDrive\\\\Documents\\\\GitHub\\\\combimab-main\\\\src\\\\Pages\\\\Preperation.js\";\nimport '../PreperationSteps.css';\nimport React from 'react';\nimport GridLayout from 'react-grid-layout';\n\n// Import the images from the src/Images folder\nimport image1 from '../Images/image1.png';\nimport image2 from '../Images/image2.png';\nimport image3 from '../Images/image3.png';\nimport image4 from '../Images/image4.png';\nimport image5 from '../Images/image5.png';\nimport image6 from '../Images/image6.png';\nimport image7 from '../Images/image7.png';\nimport image8 from '../Images/image8.png';\nimport image9 from '../Images/image9.png';\n\n// Replace the icon property with the image property\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stepsData = [{\n  image: image1,\n  description: 'Patient Weight'\n}, {\n  image: image2,\n  description: 'Determine how many vials are needed based on patient weight. Vials should be stored at refrigeration (2 -8C, 36 -46F), protected from light '\n}, {\n  image: image3,\n  description: 'Allow vials to come room temperature (18 -25C, 64 -77F) naturally without using any heat source'\n}, {\n  image: image4,\n  description: 'Visually inspect each vial to be sure there is no particulate or percipitate (if either, do not use)'\n}, {\n  image: image5,\n  description: 'Using aseptic technique, withdraw the volume of Nmab corresponding to the prescribed dose) from the appropriate number of vials and add to an equal volume (1:1) of 0.9% Sodium Chloride Injection, USP, in an infusion bag\\n ULTOMIRIS requires dilution to a final concentration of 50 mg/mL for the 3 mL'\n}, {\n  image: image6,\n  description: 'Step 6: Check prescription'\n}, {\n  image: image7,\n  description: 'Step 7: Ensure safety measures'\n}, {\n  image: image8,\n  description: 'Step 8: Reference medical book'\n}, {\n  image: image9,\n  description: 'Step 9: Consult medical professional'\n}];\n\n// Replace the FontAwesomeIcon component with the img component\nconst renderStep = (step, index) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: step.image,\n      className: \"step-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"step-description\",\n      children: step.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n// The main component that renders the grid layout with two columns\nconst PreparationSteps = () => {\n  // The layout configuration for the grid\n  const layout = [{\n    i: 'images',\n    x: 0,\n    y: 0,\n    w: 6,\n    h: 10\n  }, {\n    i: 'descriptions',\n    x: 6,\n    y: 0,\n    w: 6,\n    h: 10\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(GridLayout, {\n      className: \"layout\",\n      layout: layout,\n      cols: 12,\n      rowHeight: 30,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"images\",\n        children: stepsData.map((step, index) => renderStep(step, index))\n      }, \"images\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"descriptions\",\n        children: stepsData.map((step, index) => renderStep(step, index))\n      }, \"descriptions\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_c = PreparationSteps;\nexport default PreparationSteps;\nvar _c;\n$RefreshReg$(_c, \"PreparationSteps\");","map":{"version":3,"names":["React","GridLayout","image1","image2","image3","image4","image5","image6","image7","image8","image9","jsxDEV","_jsxDEV","stepsData","image","description","renderStep","step","index","className","children","src","fileName","_jsxFileName","lineNumber","columnNumber","PreparationSteps","layout","i","x","y","w","h","cols","rowHeight","map","_c","$RefreshReg$"],"sources":["C:/Users/alawa/OneDrive/Documents/GitHub/combimab-main/src/Pages/Preperation.js"],"sourcesContent":["\r\nimport '../PreperationSteps.css'\r\nimport React from 'react';\r\nimport GridLayout from 'react-grid-layout';\r\n\r\n// Import the images from the src/Images folder\r\nimport image1 from '../Images/image1.png';\r\nimport image2 from '../Images/image2.png';\r\nimport image3 from '../Images/image3.png';\r\nimport image4 from '../Images/image4.png';\r\nimport image5 from '../Images/image5.png';\r\nimport image6 from '../Images/image6.png';\r\nimport image7 from '../Images/image7.png';\r\nimport image8 from '../Images/image8.png';\r\nimport image9 from '../Images/image9.png';\r\n\r\n\r\n// Replace the icon property with the image property\r\nconst stepsData = [\r\n  { image: image1, description: 'Patient Weight' },\r\n  { image: image2, description: 'Determine how many vials are needed based on patient weight. Vials should be stored at refrigeration (2 -8C, 36 -46F), protected from light '\r\n  },\r\n  { image: image3, description: 'Allow vials to come room temperature (18 -25C, 64 -77F) naturally without using any heat source' },\r\n  { image: image4, description: 'Visually inspect each vial to be sure there is no particulate or percipitate (if either, do not use)' },\r\n  { image: image5, description: 'Using aseptic technique, withdraw the volume of Nmab corresponding to the prescribed dose) from the appropriate number of vials and add to an equal volume (1:1) of 0.9% Sodium Chloride Injection, USP, in an infusion bag\\n ULTOMIRIS requires dilution to a final concentration of 50 mg/mL for the 3 mL' },\r\n  { image: image6, description: 'Step 6: Check prescription' },\r\n  { image: image7, description: 'Step 7: Ensure safety measures' },\r\n  { image: image8, description: 'Step 8: Reference medical book' },\r\n  { image: image9, description: 'Step 9: Consult medical professional' },\r\n];\r\n\r\n// Replace the FontAwesomeIcon component with the img component\r\nconst renderStep = (step, index) => {\r\n  return (\r\n    <div key={index} className=\"step\">\r\n      <img src={step.image} className=\"step-image\" />\r\n      <p className=\"step-description\">{step.description}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\n// The main component that renders the grid layout with two columns\r\nconst PreparationSteps = () => {\r\n  // The layout configuration for the grid\r\n  const layout = [\r\n    { i: 'images', x: 0, y: 0, w: 6, h: 10 },\r\n    { i: 'descriptions', x: 6, y: 0, w: 6, h: 10 }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <GridLayout className=\"layout\" layout={layout} cols={12} rowHeight={30}>\r\n        <div key=\"images\" className=\"images\">\r\n          {stepsData.map((step, index) => renderStep(step, index))}\r\n        </div>\r\n        <div key=\"descriptions\" className=\"descriptions\">\r\n          {stepsData.map((step, index) => renderStep(step, index))}\r\n        </div>\r\n      </GridLayout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreparationSteps;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}